<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/social-map/src/main/java/com/mapsocial/dto/response/user/UserResponse.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/social-map/src/main/java/com/mapsocial/dto/response/user/UserResponse.java" />
              <option name="originalContent" value="package com.mapsocial.dto.response.user;&#10;&#10;import com.mapsocial.enums.UserRole;&#10;import io.swagger.v3.oas.annotations.media.Schema;&#10;import lombok.AllArgsConstructor;&#10;import lombok.Builder;&#10;import lombok.Data;&#10;import lombok.NoArgsConstructor;&#10;&#10;@Data&#10;@Builder&#10;@AllArgsConstructor&#10;@NoArgsConstructor&#10;@Schema(description = &quot;Response object chứa thông tin người dùng&quot;)&#10;public class UserResponse {&#10;    @Schema(description = &quot;ID duy nhất của người dùng&quot;, example = &quot;123e4567-e89b-12d3-a456-426614174000&quot;)&#10;    private String id;&#10;&#10;    @Schema(description = &quot;Email của người dùng&quot;, example = &quot;user@example.com&quot;)&#10;    private String email;&#10;&#10;    @Schema(description = &quot;Tên hiển thị của người dùng&quot;, example = &quot;John Doe&quot;)&#10;    private String displayName;&#10;&#10;    @Schema(description = &quot;Vai trò của người dùng trong hệ thống&quot;, example = &quot;USER&quot;)&#10;    private UserRole role;&#10;&#10;    @Schema(description = &quot;URL ảnh đại diện của người dùng&quot;, example = &quot;https://example.com/avatar.jpg&quot;)&#10;    private String avatarUrl;&#10;&#10;    @Schema(description = &quot;URL ảnh bìa của người dùng&quot;, example = &quot;https://example.com/cover.jpg&quot;)&#10;    private String coverPhoto;&#10;&#10;    @Schema(description = &quot;Trạng thái xác thực email&quot;, example = &quot;true&quot;)&#10;    private Boolean isEmailVerified;&#10;}&#10;" />
              <option name="updatedContent" value="package com.mapsocial.dto.response.user;&#13;&#10;&#13;&#10;import com.mapsocial.enums.UserRole;&#13;&#10;import io.swagger.v3.oas.annotations.media.Schema;&#13;&#10;import lombok.AllArgsConstructor;&#13;&#10;import lombok.Builder;&#13;&#10;import lombok.Data;&#13;&#10;import lombok.NoArgsConstructor;&#13;&#10;&#13;&#10;@Data&#13;&#10;@Builder&#13;&#10;@AllArgsConstructor&#13;&#10;@NoArgsConstructor&#13;&#10;@Schema(description = &quot;Response object chứa thông tin người dùng&quot;)&#13;&#10;public class UserResponse {&#13;&#10;    @Schema(description = &quot;ID duy nhất của người dùng&quot;, example = &quot;123e4567-e89b-12d3-a456-426614174000&quot;)&#13;&#10;    private String id;&#13;&#10;&#13;&#10;    @Schema(description = &quot;Email của người dùng&quot;, example = &quot;user@example.com&quot;)&#13;&#10;    private String email;&#13;&#10;&#13;&#10;    @Schema(description = &quot;Tên hiển thị của người dùng&quot;, example = &quot;John Doe&quot;)&#13;&#10;    private String displayName;&#13;&#10;&#13;&#10;    @Schema(description = &quot;Vai trò của người dùng trong hệ thống&quot;, example = &quot;USER&quot;)&#13;&#10;    private UserRole role;&#13;&#10;&#13;&#10;    @Schema(description = &quot;URL ảnh đại diện của người dùng&quot;, example = &quot;https://example.com/avatar.jpg&quot;)&#13;&#10;    private String avatarUrl;&#13;&#10;&#13;&#10;    @Schema(description = &quot;URL ảnh bìa của người dùng&quot;, example = &quot;https://example.com/cover.jpg&quot;)&#13;&#10;    private String coverPhoto;&#13;&#10;&#13;&#10;    @Schema(description = &quot;Trạng thái xác thực email&quot;, example = &quot;true&quot;)&#13;&#10;    private Boolean isEmailVerified;&#13;&#10;&#13;&#10;    @Schema(description = &quot;Thời gian tạo tài khoản&quot;, example = &quot;2024-01-01T00:00:00&quot;)&#13;&#10;    private String createdAt;&#13;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/social-map/src/main/java/com/mapsocial/mapper/UserMapper.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/social-map/src/main/java/com/mapsocial/mapper/UserMapper.java" />
              <option name="originalContent" value="package com.mapsocial.mapper;&#10;&#10;import com.mapsocial.dto.response.user.UserResponse;&#10;import com.mapsocial.entity.User;&#10;import org.springframework.stereotype.Component;&#10;&#10;@Component&#10;public class UserMapper {&#10;&#10;    public UserResponse toUserResponse(User user) {&#10;        if (user == null) {&#10;            return null;&#10;        }&#10;&#10;        return UserResponse.builder()&#10;                .id(user.getId().toString())&#10;                .email(user.getEmail())&#10;                .displayName(user.getDisplayName())&#10;                .role(user.getRole())&#10;                .avatarUrl(user.getAvatarUrl())&#10;                .coverPhoto(user.getCoverPhoto())&#10;                .isEmailVerified(user.getIsEmailVerified())&#10;                .build();&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.mapsocial.mapper;&#13;&#10;&#13;&#10;import com.mapsocial.dto.response.user.UserResponse;&#13;&#10;import com.mapsocial.entity.User;&#13;&#10;import org.springframework.stereotype.Component;&#13;&#10;&#13;&#10;@Component&#13;&#10;public class UserMapper {&#13;&#10;&#13;&#10;    public UserResponse toUserResponse(User user) {&#13;&#10;        if (user == null) {&#13;&#10;            return null;&#13;&#10;        }&#13;&#10;&#13;&#10;        return UserResponse.builder()&#13;&#10;                .id(user.getId().toString())&#13;&#10;                .email(user.getEmail())&#13;&#10;                .displayName(user.getDisplayName())&#13;&#10;                .role(user.getRole())&#13;&#10;                .avatarUrl(user.getAvatarUrl())&#13;&#10;                .coverPhoto(user.getCoverPhoto())&#13;&#10;                .isEmailVerified(user.getIsEmailVerified())&#13;&#10;                .createdAt(user.getCreatedAt() != null ? user.getCreatedAt().toString() : null)&#13;&#10;                .build();&#13;&#10;    }&#13;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>